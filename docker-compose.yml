#version: '3.8'

services:
  # PostgreSQL Database with pgvector
  postgres:
    image: pgvector/pgvector:pg15
    container_name: claude-infinito-postgres
    restart: unless-stopped
    environment:
      POSTGRES_DB: claude_infinito
      POSTGRES_USER: claude_user
      POSTGRES_PASSWORD: claude_password
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    ports:
      - "5433:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./docker/postgres/init.sql:/docker-entrypoint-initdb.d/init.sql
      - ./data/postgres:/backup
    networks:
      - claude-infinito
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U claude_user -d claude_infinito"]
      interval: 30s
      timeout: 10s
      retries: 3

  # ChromaDB Vector Database - DISABLED
  # ChromaDB is not used in Claude Infinito v1.1 - using pgvector in PostgreSQL instead
  # Keeping this section commented for reference only
  # chromadb:
  #   image: ghcr.io/chroma-core/chroma:latest
  #   container_name: claude-infinito-chromadb
  #   restart: unless-stopped
  #   environment:
  #     - CHROMA_SERVER_HOST=0.0.0.0
  #     - CHROMA_SERVER_HTTP_PORT=8000
  #     - PERSIST_DIRECTORY=/chroma/chroma
  #   ports:
  #     - "8001:8000"
  #   volumes:
  #     - chromadb_data:/chroma/chroma
  #     - ./data/chromadb:/backup
  #   networks:
  #     - claude-infinito

  # Backend API Server
  backend:
    build:
      context: ./backend
      dockerfile: ../docker/Dockerfile.backend
      target: development
    container_name: claude-infinito-backend
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - BACKEND_PORT=3001
      - LOG_LEVEL=debug
      # Database
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=5432
      - POSTGRES_DB=claude_infinito
      - POSTGRES_USER=claude_user
      - POSTGRES_PASSWORD=claude_password
      # ChromaDB - NOT USED (kept for compatibility)
      - CHROMADB_HOST=chromadb
      - CHROMADB_PORT=8000
      - CHROMA_AUTH_TOKEN=claude-infinito-secret-key
      # Ollama (external)
      - OLLAMA_HOST=host.docker.internal
      - OLLAMA_PORT=11434
      - OLLAMA_MODEL=nomic-embed-text
      # Claude API (from .env)
      - CLAUDE_API_KEY=${CLAUDE_API_KEY}
      - CLAUDE_MODEL=claude-3-5-sonnet-20241022
      # Rate Limiting
      - CLAUDE_RPM=50
      - CLAUDE_INPUT_TPM=30000
      - CLAUDE_OUTPUT_TPM=8000
    ports:
      - "3001:3001"
    volumes:
      - ./backend/src:/app/src
      - ./backend/package.json:/app/package.json
      - ./backend/tsconfig.json:/app/tsconfig.json
      - ./backend/nodemon.json:/app/nodemon.json
      - backend_node_modules:/app/node_modules
      - ./data/conversations:/app/data/conversations
      - ./logs:/app/logs
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - claude-infinito
    extra_hosts:
      - "host.docker.internal:host-gateway"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Redis for session management and caching
  redis:
    image: redis:7-alpine
    container_name: claude-infinito-redis
    restart: unless-stopped
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - claude-infinito
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Database Admin Interface (development only)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: claude-infinito-pgadmin
    restart: unless-stopped
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@claude-infinito.local
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_LISTEN_PORT: 5050
    ports:
      - "5050:5050"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - claude-infinito
    profiles:
      - development

volumes:
  postgres_data:
    driver: local
  # chromadb_data:  # DISABLED - not used, pgvector in PostgreSQL instead
  #   driver: local
  redis_data:
    driver: local
  pgadmin_data:
    driver: local
  backend_node_modules:
    driver: local

networks:
  claude-infinito:
    driver: bridge
    name: claude-infinito-network
